<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<bean id="dataSourceInterrogateRead" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${read.rkjc.jdbc.connection.driver}" />
		<property name="jdbcUrl" value="${read.rkjc.jdbc.connection.url}" />
		<property name="user" value="${read.rkjc.jdbc.connection.username}" />
		<property name="password" value="${read.rkjc.jdbc.connection.password}" />
		<property name="initialPoolSize" value="${read.rkjc.c3p0.initialPoolSize}" />
		<property name="minPoolSize" value="${read.rkjc.c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${read.rkjc.c3p0.maxPoolSize}" />
		<property name="acquireIncrement" value="${read.rkjc.c3p0.acquireIncrement}" />
		<property name="maxIdleTime" value="${read.rkjc.c3p0.maxIdleTime}" />
		<property name="idleConnectionTestPeriod" value="${read.rkjc.c3p0.idleConnectionTestPeriod}" />
		<property name="maxStatements" value="${read.rkjc.c3p0.maxStatements}" />
		<property name="checkoutTimeout" value="${read.rkjc.c3p0.checkoutTimeout}" />
		<property name="acquireRetryAttempts" value="${read.rkjc.c3p0.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${read.rkjc.c3p0.breakAfterAcquireFailure}" />
		<property name="autoCommitOnClose" value="${read.rkjc.c3p0.autoCommitOnClose}" />
		<property name="testConnectionOnCheckout" value="${read.rkjc.c3p0.testConnectionOnCheckout}" />
		<property name="numHelperThreads" value="${read.rkjc.c3p0.numHelperThreads}" />
		<property name="preferredTestQuery" value="${read.rkjc.c3p0.preferredTestQuery}" />
	</bean>

	<bean id="mysqlInterceptorRead"
		class="com.ideal.rd.web.framework.common.interceptor.MySqlleInterceptor">
		<property name="showInfo" value="true" />
	</bean>

	<!-- SqlSessionFactory -->
	<bean id="sqlSessionFactoryInterrogateRead" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceInterrogateRead" />
		<property name="configLocation" value="classpath:mybatis/mybatis_config_mysql.xml" />
		<property name="mapperLocations">
			<list>
				<!-- <value>classpath:mybatis/mappers/read/*.xml</value> -->
				<value>classpath:mybatis/mappers/memory/*.xml</value>
			</list>
		</property>

		<property name="plugins">
			<array>
				<ref bean="mysqlInterceptorRead" />
			</array>
		</property>
	</bean>

	<!-- TransactionManager -->
	<bean id="transactionManagerInterrogateRead" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceInterrogateRead" />
	</bean>
	
    <!--启动spring事务注解功能-->
    <tx:annotation-driven transaction-manager="transactionManagerInterrogateRead" />
	
	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:sqlSessionFactoryBeanName="sqlSessionFactoryInterrogateRead"
		p:basePackage="com.zhixin.rd.rkjc.web.dao.read">
	</bean>
	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:sqlSessionFactoryBeanName="sqlSessionFactoryInterrogateRead"
		p:basePackage="com.zhixin.rd.memory.web.dao">
	</bean>
</beans>